# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: validate Get involved  page
- Location: C:\Users\mudak\Downloads\playwright-main\playwright-main\basic\Get involved.spec.js:3:5

# Error details

```
Error: expect(received).toBe(expected) // Object.is equality

Expected: "Get  INVOLVED"
Received: "Get INVOLVED"
    at C:\Users\mudak\Downloads\playwright-main\playwright-main\basic\Get involved.spec.js:8:25
```

# Page snapshot

```yaml
- link:
  - img
- navigation:
  - navigation "Main":
    - list:
      - listitem:
        - link "Home"
      - listitem:
        - link "ADS Explorer"
      - listitem:
        - link "Staking"
      - listitem:
        - link "Validator"
      - listitem:
        - button "More"
- button "Connect wallet Connect wallet Connect wallet"
- main:
  - img "hero"
  - heading "Welcome to Alkimi Labs" [level=1]
  - paragraph: Where $ADS holders innovate, earn rewards and shape digital advertising's future.
  - button "Buy $ADS Buy $ADS Buy $ADS"
  - link "Estimate Rewards"
  - heading "Real Time Insights" [level=2]
  - text: Fee Revenue
  - img
  - text: YTD $48,770.986 Fee Revenue
  - img
  - text: QTD $0 Transaction count
  - img
  - text: All time 1,669,917,481 Transaction count
  - img
  - text: QTD 62,514,537
  - img
  - paragraph: Ads Explorer
  - paragraph: Unlock the Power of Transparency. Whether you’re a media buyer, publisher or a curious user, gain full visibility into ad-spends and their impact. Track metrics, analyse results, and ensure every impression is recorded.
  - link "Explore Explore Explore"
  - img
  - paragraph: Soft Staking
  - paragraph: Unlock effortless rewards with our Soft Staking Pool—flexible, straightforward, and designed to work for you.
  - link "Explore Explore Explore"
  - heading "Get INVOLVED" [level=2]
  - paragraph: With the $ADS ecosystem. Power our Ad Exchange with a few simple steps.
  - region:
    - group:
      - heading "BUY $ADS" [level=3]
      - paragraph: $ADS is your gateway into the Alkimi network. You can use these for either running a validator on the network or staking your stADS.
      - link "Buy $ADS Buy $ADS Buy $ADS"
    - group:
      - heading "Estimate Rewards" [level=3]
      - paragraph: Calculate what you could earn getting involved in the $ADS ecosystem.
      - link "Estimate Rewards Estimate Rewards Estimate Rewards"
    - group:
      - heading "Validate" [level=3]
      - paragraph: "Sign up to become a validator and earn rewards. Note: Minimum 50K $ADS required."
      - link "Become A Validator Become A Validator Become A Validator"
    - group:
      - heading "Soft Staking Programme" [level=3]
      - paragraph: Got some stADS from providing liquidity on our pool on balancer? Soft-stake them to earn rewards.
      - link "Join the Pool Join the Pool Join the Pool"
  - paragraph: "$ADS Available on:"
  - img
  - paragraph: Become a Validator
  - paragraph: A validator ensures integrity and transparency in our decentralised AD Exchange by verifying transactions and validating new blocks. This promotes trust and efficiency in the Alkimi network.
  - link "Sign Up Sign Up Sign Up"
  - heading "VALIDATOR METRICS" [level=2]
  - text: People in the Validator Waitlist
  - img
  - text: 59 Network Validators
  - img
  - text: 1,228 TVL in validators
  - img
  - text: ($ADS) 61,400,000
  - heading "Join our Community on Discord" [level=2]
  - paragraph: Don’t miss out! Discord is where the action happens.
  - link "Join Now Join Now Join Now"
- img
- alert
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 |
   3 | test('validate Get involved  page', async ({ page }) =>
   4 |      {await page.goto('https://qa-alkimi-labs.vercel.app/?_vercel_share=RPRHjy6nR3K52URLJHrLThX4kYoyv29p');
   5 |         await page.locator("//button[normalize-space()='Got it!']").click()
   6 |
   7 | const getinvolved = await page.locator("h2[class=' text-[28px] leading-[28px] lg:text-[58px] lg:leading-[58px] uppercase font-unbounded mb-3']").textContent()
>  8 |     expect(getinvolved).toBe("Get  INVOLVED");
     |                         ^ Error: expect(received).toBe(expected) // Object.is equality
   9 |     const getbelow_text = await page.locator("p[class='text-xs lg:text-sm text-gray-40 max-w-xs']").textContent()
  10 |     expect(getbelow_text).toBe("With the $ADS ecosystem. Power our Ad Exchange with a few simple steps.");
  11 |
  12 |
  13 |     const video3 = await page.locator("(//video[contains(@class,'absolute top-0 left-0 w-full h-full object-cover')])[1]")
  14 |     expect(video3).toBeVisible()
  15 |     const video3text = await page.getByText("$ADS is your gateway into the Alkimi network. You can use these for either running a validator on the network or staking your stADS.").innerText()
  16 |     expect(video3text).toBe("$ADS is your gateway into the Alkimi network. You can use these for either running a validator on the network or staking your stADS.")
  17 |     const buytext = await page.locator("(//h3[normalize-space()='BUY $ADS'])[1]").textContent()
  18 |     expect(buytext).toBe("BUY $ADS");
  19 |     const byebutton = await page.locator("//a[normalize-space()='Buy $ADS']")
  20 |     expect(byebutton).toBeVisible()
  21 |      })
  22 |     
  23 | ///HOME PAGE(1)
  24 | test('validate  home page', async ({ page }) => {
  25 |     await page.waitForTimeout(5000)
  26 |     await page.goto('https://qa-alkimi-labs.vercel.app/?_vercel_share=RPRHjy6nR3K52URLJHrLThX4kYoyv29p');
  27 |     await page.locator("//button[normalize-space()='Got it!']").click()
  28 |     const welcomeText = await page.locator("//h1[normalize-space()='Welcome to Alkimi Labs']").textContent();
  29 |     expect(welcomeText).toBe('Welcome to Alkimi Labs');
  30 |     const belowheading = await page.locator("p[class='lg:text-sm text-gray-40 text-sm md:text-lg max-w-[400px] lg:max-w-[450px] mx-auto transition-transform duration-700 will-change-transform translate-y-0']").textContent();
  31 |     expect(belowheading).toBe("Where $ADS holders innovate, earn rewards and shape digital advertising's future.");
  32 |     const button = await page.locator("button[type='button']")
  33 |     expect(button).toBeVisible()
  34 |     const buttontext = await button.textContent()
  35 |     expect(buttontext).toBe("Buy $ADS")
  36 |     const rewards = await page.locator("a[class='inline-flex gap-1 items-center justify-center whitespace-nowrap rounded-button ring-offset-background focus-visible:outline-none transition-all disabled:pointer-events-none disabled:opacity-20 underline underline-offset-2 text-gray-40 active:text-white hover:text-white lg:text-sm px-[48px] py-[10px] text-sm']").textContent()
  37 |     expect(rewards).toBe("Estimate Rewards");
  38 |
  39 | })
  40 |
  41 |
  42 | test('bootstrap ',async({page})=>
  43 | {
  44 | await page.goto("https://www.jquery-az.com/boots/demo.php?ex=63.0_2");
  45 | await page.locator("button[title='HTML, CSS']").click();
  46 |    
  47 | const collecting=await page.$$("ul>li label input");
  48 |
  49 | for(let collect of collecting)
  50 | {
  51 |    const  value =await collect.textContent();
  52 |    if(value.includes('Angular')||value.includes('Java'))
  53 |    {
  54 |        await    collect.click();
  55 |
  56 |
  57 |    }
  58 |
  59 |
  60 | }
  61 |
  62 |
  63 |
  64 | })
```